<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inits
draw_set_font(fontTitle);
draw_set_circle_precision(8);
draw_set_halign(fa_center);

instance_create (room_width/2, room_height/2 - 10, oPlayer);
instance_create (0, 0, oTitle);

global.depthCount = 0;
global.scale = 3;
global.mid = 5000;
global.finale = 6500;

count = 0;  //counter to spawn oBlockys. gets shorter as countDown decs
countDown = 5000;   //sets background colour. lower this is, more often blockys spawn
bgcol = make_colour_hsv(120, 255, global.depthCount);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game controls
bgcol = make_colour_hsv(110, 220, countDown / 50);

if (global.start == false)
{
    if (random(10) &lt; 3) 
    {
        instance_create (irandom(room_width), room_height, oCloud);
    }
}
else
{
    if ( (random(10) &lt; 3) and (count &gt; (countDown/100)) and (global.depthCount &lt; global.finale) and (global.depthCount &gt; 200) )
    {
        instance_create (irandom(room_width), room_height, oBlocky);
        if ( keyboard_check(vk_left) or keyboard_check(vk_right) )
        {
            instance_create (0, irandom(room_height), oBlocky);
            instance_create (room_width, irandom(room_height), oBlocky);
        }
        count = 0;
    }
    else if (count &lt;= (countDown / 100) )
    {
        count += 1;
    }
    if (countDown &gt; 0)
    {
        countDown -= 1;
    }
    global.depthCount += 1;
    if ( (global.depthCount &gt; global.mid) and (!instance_exists(oPlayer)) )
    {
        instance_create (0, 0, oEndtitle);
    }
}

with (all)
{
    if ( (y &lt; -1) or (y &gt; room_height + 1) or (x &lt; -1) or (x &gt; room_width + 1) )
    {
        instance_destroy();
    }
}
/*
if (keyboard_check_pressed(vk_escape) )
{
    game_end();
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

draw_rectangle_colour(0, 0, room_width, room_height, bgcol, bgcol, bgcol, bgcol, false);
//draw_text_colour(32, 32, "FPS = " + string(fps), c_red, c_red, c_red, c_red, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
